plugins {
    id "com.google.protobuf" version "0.8.12"
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'

}

group = 'com.TMDA'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.4'

    // https://mvnrepository.com/artifact/io.grpc/grpc-all
    compile group: 'io.grpc', name: 'grpc-all', version: '1.28.0'

    compile 'io.github.lognet:grpc-spring-boot-starter:3.5.2'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

//     testImplementation('org.springframework.boot:spring-boot-starter-test') {
//         exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//     }
//     testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

//dependencies {
//    // https://mvnrepository.com/artifact/io.grpc/grpc-stub
//    compile group: 'io.grpc', name: 'grpc-stub', version: '1.28.0'
//    compile group: 'io.grpc', name: 'grpc-protobuf', version: '1.28.0'
//    compile group: 'io.grpc', name: 'grpc-services', version: '1.28.0'
//    compile group: 'io.grpc', name: 'grpc-netty-shaded', version: '1.28.0'
//
//    compile 'io.github.lognet:grpc-spring-boot-starter:3.5.2'
//
//
//    compileOnly "javax.annotation:javax.annotation-api:1.2"
//
//    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
//    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.11.4'
//
//    // https://mvnrepository.com/artifact/io.grpc/grpc-all
//    compile group: 'io.grpc', name: 'grpc-all', version: '1.28.0'
//
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    compileOnly 'org.projectlombok:lombok'
//    annotationProcessor 'org.projectlombok:lombok'
//    testImplementation('org.springframework.boot:spring-boot-starter-test') {
//        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//    }
//}




sourceSets {
    main {
//        java {
////            srcDirs 'build/generated/sources/main/proto/grpc'
////            srcDirs 'build/generated/sources/main/proto/java'
//            srcDirs 'src/main/com/tmda'
//
//        }
        java {
            srcDirs = ["src/main/java", "${protobuf.generatedFilesBaseDir}/main/java"]
        }
    }
}

// https://mvnrepository.com/artifact/com.google.protobuf/protoc
//    compile group: 'com.google.protobuf', name: 'protoc', version: '3.11.4', ext: 'pom'
// https://mvnrepository.com/artifact/io.grpc/protoc-gen-grpc-java
//compile group: 'io.grpc', name: 'protoc-gen-grpc-java', version: '1.28.0', ext: 'pom'
protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.11.4'
    }
    // Locate the codegen plugins
    plugins {
        // Locate a plugin with name 'grpc'. This step is optional.
        // If you don't locate it, protoc will try to use "protoc-gen-grpc" from
        // system search path.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.28.0'
        }
        // Any other plugins
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
